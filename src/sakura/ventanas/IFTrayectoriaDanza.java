/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sakura.ventanas;

import clases.Config;
import clases.bdd.Conectar;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author JOSE
 */
public class IFTrayectoriaDanza extends javax.swing.JInternalFrame {

    //VARIABLES
    private int cedula = -1;
    private Timer timer;
    private int lugar = 0;
    private int id = -1;
    
    //TABLA KARATECA
    private TableRowSorter trsFiltro;
    private DefaultTableModel modelo;
    private String[]datos;
    
    //TABLA COMPETENCIAS
    private TableRowSorter trsFiltro1;
    private DefaultTableModel modelo1;
    private String[]datos1;
    
    //IMAGEN
    private String URLImagen = "";

    //CONEXIONES
    private Connection connection;

    //COLORES
    private final static Color azul = new Color(0, 203, 255);
    private final static Color amar = new Color(255, 255, 102);
    
    public IFTrayectoriaDanza() {
       
        initComponents();
        
        timer = new Timer(10, new progreso());
        
        e(0,btnGuardar);
        e(0,btnEditar);
        v(0,btnGuardarCambios);
        v(0,pnlBuscar);
        v(0,btnFoto);
        v(0,btnMedallaOro);
        v(0,btnMedallaPlata);
        v(0,btnMedallaBronce);
        v(0,btnMedallaOroC);
        v(0,btnMedallaPlataC);
        v(0,btnMedallaBronceC);
        e(0,btnMedallaOroN);
        e(0,btnMedallaPlataN);
        e(0,btnMedallaBronceN);
        
        InhabilitarDatos();
        
        /**********MOSTRAR COLUMNAS EN LA TABLA KARATECA**********/
       
        modelo = new DefaultTableModel();
        datos = new String [4];

        modelo.addColumn("NOMBRE");
        modelo.addColumn("APELLIDO");
        modelo.addColumn("Nº CÉDULA");
        
        tblDanzinas.setModel(modelo);
        modelo.fireTableDataChanged();
        
        /**********MOSTRAR COLUMNAS EN LA TABLA COMPETENCIAS**********/
      
        modelo1 = new DefaultTableModel();
        datos1 = new String [4];

        modelo1.addColumn("Nº COMPETENCIA");
        modelo1.addColumn("NOMBRE");
        modelo1.addColumn("CATEGORIA");
        modelo1.addColumn("LUGAR");
        
        tblCompetencias.setModel(modelo1);
        modelo1.fireTableDataChanged();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pnlFondo = new elaprendiz.gui.panel.PanelImage();
        pnlCurvas = new elaprendiz.gui.panel.PanelCurves();
        pnlBuscar = new elaprendiz.gui.panel.PanelImage();
        jSeparator1 = new javax.swing.JSeparator();
        pnlBuscadorCompetidor = new javax.swing.JPanel();
        txtBuscar = new elaprendiz.gui.textField.TextFieldRectIcon();
        cbBuscar = new elaprendiz.gui.comboBox.ComboBoxRectIcon();
        pnlTablaCompetidor = new javax.swing.JPanel();
        scrollTabla = new javax.swing.JScrollPane();
        tblDanzinas = new javax.swing.JTable();
        pnlTablaCompetencia = new javax.swing.JPanel();
        scrollTabla2 = new javax.swing.JScrollPane();
        tblCompetencias = new javax.swing.JTable();
        pnlBuscadorCompetencia = new javax.swing.JPanel();
        txtBuscar1 = new elaprendiz.gui.textField.TextFieldRectIcon();
        cbBuscar1 = new elaprendiz.gui.comboBox.ComboBoxRectIcon();
        btnEliminar2 = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnGuardarCambios = new javax.swing.JButton();
        pnlDatosPersonales2 = new elaprendiz.gui.panel.PanelTranslucido();
        FECHA1 = new elaprendiz.gui.label.LabelMetric();
        dcFechaIda = new com.toedter.calendar.JDateChooser();
        FECHA2 = new elaprendiz.gui.label.LabelMetric();
        dcFechaRegreso = new com.toedter.calendar.JDateChooser();
        FECHA3 = new elaprendiz.gui.label.LabelMetric();
        REPRESENTANTE1 = new elaprendiz.gui.label.LabelMetric();
        cbCategoria = new elaprendiz.gui.comboBox.ComboBoxRectIcon();
        cbEdades = new elaprendiz.gui.comboBox.ComboBoxRectIcon();
        spinnerLugar = new javax.swing.JSpinner();
        jSeparator2 = new javax.swing.JSeparator();
        LUGAR = new javax.swing.JLabel();
        lblPrimerLugar = new javax.swing.JLabel();
        lblSegundoLugar = new javax.swing.JLabel();
        lblTercerLugar = new javax.swing.JLabel();
        btnMedallaOroN = new javax.swing.JButton();
        btnMedallaOro = new javax.swing.JButton();
        btnMedallaPlataN = new javax.swing.JButton();
        btnMedallaPlata = new javax.swing.JButton();
        btnMedallaBronceN = new javax.swing.JButton();
        btnMedallaBronce = new javax.swing.JButton();
        REPRESENTANTE2 = new elaprendiz.gui.label.LabelMetric();
        btnMedallaOroC = new javax.swing.JButton();
        btnMedallaPlataC = new javax.swing.JButton();
        btnMedallaBronceC = new javax.swing.JButton();
        pnlDatosPersonales1 = new elaprendiz.gui.panel.PanelTranslucido();
        NOMBRE1 = new elaprendiz.gui.label.LabelMetric();
        txtNombreCompetencia = new elaprendiz.gui.textField.TextFieldRectIcon();
        APELLIDO1 = new elaprendiz.gui.label.LabelMetric();
        txtLugarCompetencia = new elaprendiz.gui.textField.TextFieldRectIcon();
        FECHA = new elaprendiz.gui.label.LabelMetric();
        dcFechaFinal = new com.toedter.calendar.JDateChooser();
        REPRESENTANTE = new elaprendiz.gui.label.LabelMetric();
        cbTipoFederacion = new elaprendiz.gui.comboBox.ComboBoxRectIcon();
        NOMBRE3 = new elaprendiz.gui.label.LabelMetric();
        txtArena = new elaprendiz.gui.textField.TextFieldRectIcon();
        txtFederacion = new elaprendiz.gui.textField.TextFieldRectIcon();
        NOMBRE4 = new elaprendiz.gui.label.LabelMetric();
        dcFechaInicio = new com.toedter.calendar.JDateChooser();
        FECHA4 = new elaprendiz.gui.label.LabelMetric();
        FECHA5 = new elaprendiz.gui.label.LabelMetric();
        pnlDatosPersonales = new elaprendiz.gui.panel.PanelTranslucido();
        CEDULA = new elaprendiz.gui.label.LabelMetric();
        FOTO = new elaprendiz.gui.label.LabelMetric();
        NOMBRE = new elaprendiz.gui.label.LabelMetric();
        APELLIDO = new elaprendiz.gui.label.LabelMetric();
        pnlFoto = new elaprendiz.gui.panel.PanelTranslucido();
        btnFoto = new elaprendiz.gui.button.ButtonTask();
        pnlImagenFoto = new elaprendiz.gui.panel.PanelImage();
        txtApellido = new elaprendiz.gui.textField.TextFieldRectIcon();
        txtCedula = new elaprendiz.gui.textField.TextFieldRectIcon();
        txtNombre = new elaprendiz.gui.textField.TextFieldRectIcon();
        txtEdad = new elaprendiz.gui.textField.TextFieldRectIcon();
        EDAD = new elaprendiz.gui.label.LabelMetric();
        SEXO = new elaprendiz.gui.label.LabelMetric();
        txtSexo = new elaprendiz.gui.textField.TextFieldRectIcon();
        progressbarBarra = new elaprendiz.gui.progressBar.ProgressBarRound();

        setClosable(true);
        setIconifiable(true);
        setTitle("Trayecto danza");

        pnlFondo.setBackground(new java.awt.Color(255, 255, 255));
        pnlFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sakura/resources/fondo-abstracto-celeste_1077-3.jpg"))); // NOI18N
        pnlFondo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlCurvas.setBackground(new java.awt.Color(255, 0, 0));
        pnlCurvas.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sakura/resources/Fondo-de-pantalla-Abstracto-78.jpg"))); // NOI18N
        pnlBuscar.setLayout(new java.awt.GridBagLayout());

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator1.setPreferredSize(new java.awt.Dimension(10, 200));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        pnlBuscar.add(jSeparator1, gridBagConstraints);

        pnlBuscadorCompetidor.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Buscador", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        pnlBuscadorCompetidor.setOpaque(false);
        pnlBuscadorCompetidor.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                pnlBuscadorCompetidorCompetidorMouseDragged(evt);
            }
        });
        pnlBuscadorCompetidor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlBuscadorCompetidorCompetidorMousePressed(evt);
            }
        });
        pnlBuscadorCompetidor.setLayout(new java.awt.GridBagLayout());

        txtBuscar.setBackground(new java.awt.Color(255, 255, 102));
        txtBuscar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        txtBuscar.setAnchoDeBorde(3.0F);
        txtBuscar.setColorDeBorde(new java.awt.Color(0, 0, 0));
        txtBuscar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sakura/resources/botones/share.png"))); // NOI18N
        txtBuscar.setPreferredSize(new java.awt.Dimension(250, 25));
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscarKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 6, 6);
        pnlBuscadorCompetidor.add(txtBuscar, gridBagConstraints);

        cbBuscar.setBackground(new java.awt.Color(255, 255, 102));
        cbBuscar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        cbBuscar.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Nombre", "Apellido", "Nº Cédula" }));
        cbBuscar.setAnchoDeBorde(3.0F);
        cbBuscar.setColorDeBorde(new java.awt.Color(0, 0, 0));
        cbBuscar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cbBuscar.setPreferredSize(new java.awt.Dimension(130, 25));
        cbBuscar.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbBuscarItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        pnlBuscadorCompetidor.add(cbBuscar, gridBagConstraints);

        pnlBuscar.add(pnlBuscadorCompetidor, new java.awt.GridBagConstraints());

        pnlTablaCompetidor.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlTablaCompetidor.setOpaque(false);
        pnlTablaCompetidor.setLayout(new java.awt.BorderLayout());

        scrollTabla.setPreferredSize(new java.awt.Dimension(379, 250));

        tblDanzinas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblDanzinas.setToolTipText("");
        tblDanzinas.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tblDanzinas.setGridColor(new java.awt.Color(51, 51, 255));
        tblDanzinas.setSelectionForeground(new java.awt.Color(255, 0, 51));
        tblDanzinas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDanzinasMouseClicked(evt);
            }
        });
        scrollTabla.setViewportView(tblDanzinas);

        pnlTablaCompetidor.add(scrollTabla, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        pnlBuscar.add(pnlTablaCompetidor, gridBagConstraints);

        pnlTablaCompetencia.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlTablaCompetencia.setOpaque(false);
        pnlTablaCompetencia.setLayout(new java.awt.BorderLayout());

        scrollTabla2.setPreferredSize(new java.awt.Dimension(379, 250));

        tblCompetencias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblCompetencias.setToolTipText("");
        tblCompetencias.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tblCompetencias.setGridColor(new java.awt.Color(51, 51, 255));
        tblCompetencias.setSelectionForeground(new java.awt.Color(255, 0, 51));
        tblCompetencias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCompetenciasMouseClicked(evt);
            }
        });
        scrollTabla2.setViewportView(tblCompetencias);

        pnlTablaCompetencia.add(scrollTabla2, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        pnlBuscar.add(pnlTablaCompetencia, gridBagConstraints);

        pnlBuscadorCompetencia.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Buscador", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        pnlBuscadorCompetencia.setOpaque(false);
        pnlBuscadorCompetencia.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                pnlBuscadorCompetenciaCompetidorMouseDragged(evt);
            }
        });
        pnlBuscadorCompetencia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlBuscadorCompetenciaCompetidorMousePressed(evt);
            }
        });
        pnlBuscadorCompetencia.setLayout(new java.awt.GridBagLayout());

        txtBuscar1.setBackground(new java.awt.Color(255, 255, 102));
        txtBuscar1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        txtBuscar1.setAnchoDeBorde(3.0F);
        txtBuscar1.setColorDeBorde(new java.awt.Color(0, 0, 0));
        txtBuscar1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtBuscar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sakura/resources/botones/share.png"))); // NOI18N
        txtBuscar1.setPreferredSize(new java.awt.Dimension(250, 25));
        txtBuscar1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscar1KeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 6, 6);
        pnlBuscadorCompetencia.add(txtBuscar1, gridBagConstraints);

        cbBuscar1.setBackground(new java.awt.Color(255, 255, 102));
        cbBuscar1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        cbBuscar1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Nombre", "Categoria", "Lugar" }));
        cbBuscar1.setAnchoDeBorde(3.0F);
        cbBuscar1.setColorDeBorde(new java.awt.Color(0, 0, 0));
        cbBuscar1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cbBuscar1.setPreferredSize(new java.awt.Dimension(130, 25));
        cbBuscar1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbBuscar1ItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        pnlBuscadorCompetencia.add(cbBuscar1, gridBagConstraints);

        btnEliminar2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnEliminar2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sakura/resources/botones/btnEliminar2.png"))); // NOI18N
        btnEliminar2.setBorder(null);
        btnEliminar2.setBorderPainted(false);
        btnEliminar2.setContentAreaFilled(false);
        btnEliminar2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEliminar2.setFocusPainted(false);
        btnEliminar2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEliminar2.setIconTextGap(-2);
        btnEliminar2.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/sakura/resources/botones/btnLEliminarRellover.png"))); // NOI18N
        btnEliminar2.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        btnEliminar2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEliminar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminar2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        pnlBuscadorCompetencia.add(btnEliminar2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        pnlBuscar.add(pnlBuscadorCompetencia, gridBagConstraints);

        pnlCurvas.add(pnlBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 290, 340));

        btnBuscar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sakura/resources/botones/btnBuscar.png"))); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.setBorder(null);
        btnBuscar.setBorderPainted(false);
        btnBuscar.setContentAreaFilled(false);
        btnBuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBuscar.setFocusPainted(false);
        btnBuscar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/sakura/resources/botones/btnBuscarRellover.png"))); // NOI18N
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        pnlCurvas.add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 570, -1, -1));

        btnEditar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sakura/resources/botones/btnEditar.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.setBorder(null);
        btnEditar.setBorderPainted(false);
        btnEditar.setContentAreaFilled(false);
        btnEditar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/sakura/resources/botones/btnEditarRellover.png"))); // NOI18N
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        pnlCurvas.add(btnEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 570, -1, -1));

        btnGuardar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sakura/resources/botones/btnGuardar.png"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.setBorder(null);
        btnGuardar.setBorderPainted(false);
        btnGuardar.setContentAreaFilled(false);
        btnGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGuardar.setFocusPainted(false);
        btnGuardar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/sakura/resources/botones/btnGuardarRellover.png"))); // NOI18N
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        pnlCurvas.add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 570, -1, -1));

        btnGuardarCambios.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnGuardarCambios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sakura/resources/botones/btnGuardar.png"))); // NOI18N
        btnGuardarCambios.setText("Guardar cambios");
        btnGuardarCambios.setBorder(null);
        btnGuardarCambios.setBorderPainted(false);
        btnGuardarCambios.setContentAreaFilled(false);
        btnGuardarCambios.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGuardarCambios.setFocusPainted(false);
        btnGuardarCambios.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/sakura/resources/botones/btnGuardarRellover.png"))); // NOI18N
        btnGuardarCambios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarCambiosActionPerformed(evt);
            }
        });
        pnlCurvas.add(btnGuardarCambios, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 570, -1, -1));

        pnlDatosPersonales2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 2, true), "Datos de competición", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        pnlDatosPersonales2.setTran(0.0F);
        pnlDatosPersonales2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        FECHA1.setForeground(new java.awt.Color(0, 0, 0));
        FECHA1.setText("Fecha de ida");
        FECHA1.setColorDeSombra(new java.awt.Color(255, 255, 51));
        FECHA1.setDistanciaDeSombra(1);
        pnlDatosPersonales2.add(FECHA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, 20));

        dcFechaIda.setBackground(new java.awt.Color(255, 255, 102));
        dcFechaIda.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 102), 3));
        dcFechaIda.setDateFormatString("dd-MM-yyyy");
        dcFechaIda.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        dcFechaIda.setMinSelectableDate(new java.util.Date(-62135749683000L));
        pnlDatosPersonales2.add(dcFechaIda, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 120, 30));

        FECHA2.setForeground(new java.awt.Color(0, 0, 0));
        FECHA2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        FECHA2.setText("Hasta el");
        FECHA2.setColorDeSombra(new java.awt.Color(255, 255, 51));
        FECHA2.setDistanciaDeSombra(1);
        pnlDatosPersonales2.add(FECHA2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 40, 80, 30));

        dcFechaRegreso.setBackground(new java.awt.Color(255, 255, 102));
        dcFechaRegreso.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 102), 3));
        dcFechaRegreso.setDateFormatString("dd-MM-yyyy");
        dcFechaRegreso.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        dcFechaRegreso.setMinSelectableDate(new java.util.Date(-62135749683000L));
        pnlDatosPersonales2.add(dcFechaRegreso, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 40, 120, 30));

        FECHA3.setForeground(new java.awt.Color(0, 0, 0));
        FECHA3.setText("Fecha de regreso");
        FECHA3.setColorDeSombra(new java.awt.Color(255, 255, 51));
        FECHA3.setDistanciaDeSombra(1);
        pnlDatosPersonales2.add(FECHA3, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 20, -1, 20));

        REPRESENTANTE1.setForeground(new java.awt.Color(0, 0, 0));
        REPRESENTANTE1.setText("Clasificación");
        REPRESENTANTE1.setColorDeSombra(new java.awt.Color(255, 255, 51));
        REPRESENTANTE1.setDistanciaDeSombra(1);
        pnlDatosPersonales2.add(REPRESENTANTE1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, 20));

        cbCategoria.setBackground(new java.awt.Color(0, 204, 255));
        cbCategoria.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 102)));
        cbCategoria.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "----------", "Clásica", "Urbana", "Folklórica", "Libre" }));
        cbCategoria.setAnchoDeBorde(4.0F);
        cbCategoria.setColorDeBorde(new java.awt.Color(255, 255, 102));
        cbCategoria.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cbCategoria.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbCategoriaItemStateChanged(evt);
            }
        });
        pnlDatosPersonales2.add(cbCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 150, 30));

        cbEdades.setBackground(new java.awt.Color(0, 204, 255));
        cbEdades.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 102)));
        cbEdades.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "----------", "Prejuveníl (6-7)", "Juveníl I (8-11)", "Junior I (12-13)", "Junior II (14-15)", "Youth (16-18)", "Adulto I (19-24)", "Adulto II (25-34)", "Senior I (35-44)", "Senior II (45-55)", "Top Senior (56-...)" }));
        cbEdades.setAnchoDeBorde(4.0F);
        cbEdades.setColorDeBorde(new java.awt.Color(255, 255, 102));
        cbEdades.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cbEdades.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbEdadesItemStateChanged(evt);
            }
        });
        pnlDatosPersonales2.add(cbEdades, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 90, 150, 30));

        spinnerLugar.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        spinnerLugar.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinnerLugarStateChanged(evt);
            }
        });
        pnlDatosPersonales2.add(spinnerLugar, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 150, 40, 30));

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        pnlDatosPersonales2.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 140, 10, 50));

        LUGAR.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        LUGAR.setText(" Lugar");
        pnlDatosPersonales2.add(LUGAR, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 150, 50, 30));

        lblPrimerLugar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblPrimerLugar.setText(" 1ro");
        pnlDatosPersonales2.add(lblPrimerLugar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 30, -1));

        lblSegundoLugar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblSegundoLugar.setText(" 2do");
        pnlDatosPersonales2.add(lblSegundoLugar, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 190, 30, -1));

        lblTercerLugar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblTercerLugar.setText(" 3ro");
        pnlDatosPersonales2.add(lblTercerLugar, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 190, 30, -1));

        btnMedallaOroN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sakura/resources/botones/medallaCarbon.png"))); // NOI18N
        btnMedallaOroN.setBorder(null);
        btnMedallaOroN.setBorderPainted(false);
        btnMedallaOroN.setContentAreaFilled(false);
        btnMedallaOroN.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMedallaOroN.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/sakura/resources/botones/medallaOroOpa.png"))); // NOI18N
        btnMedallaOroN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMedallaOroNActionPerformed(evt);
            }
        });
        pnlDatosPersonales2.add(btnMedallaOroN, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, 50));

        btnMedallaOro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sakura/resources/botones/medallaOro.png"))); // NOI18N
        btnMedallaOro.setBorder(null);
        btnMedallaOro.setBorderPainted(false);
        btnMedallaOro.setContentAreaFilled(false);
        btnMedallaOro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMedallaOro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMedallaOroActionPerformed(evt);
            }
        });
        pnlDatosPersonales2.add(btnMedallaOro, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, 50));

        btnMedallaPlataN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sakura/resources/botones/medallaCarbon.png"))); // NOI18N
        btnMedallaPlataN.setBorder(null);
        btnMedallaPlataN.setBorderPainted(false);
        btnMedallaPlataN.setContentAreaFilled(false);
        btnMedallaPlataN.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMedallaPlataN.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/sakura/resources/botones/medallaPlataOpa.png"))); // NOI18N
        btnMedallaPlataN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMedallaPlataNActionPerformed(evt);
            }
        });
        pnlDatosPersonales2.add(btnMedallaPlataN, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 140, -1, 50));

        btnMedallaPlata.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sakura/resources/botones/medallaPlata.png"))); // NOI18N
        btnMedallaPlata.setBorder(null);
        btnMedallaPlata.setBorderPainted(false);
        btnMedallaPlata.setContentAreaFilled(false);
        btnMedallaPlata.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMedallaPlata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMedallaPlataActionPerformed(evt);
            }
        });
        pnlDatosPersonales2.add(btnMedallaPlata, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 140, -1, 50));

        btnMedallaBronceN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sakura/resources/botones/medallaCarbon.png"))); // NOI18N
        btnMedallaBronceN.setBorder(null);
        btnMedallaBronceN.setBorderPainted(false);
        btnMedallaBronceN.setContentAreaFilled(false);
        btnMedallaBronceN.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMedallaBronceN.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/sakura/resources/botones/medallaBronceOpa.png"))); // NOI18N
        btnMedallaBronceN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMedallaBronceNActionPerformed(evt);
            }
        });
        pnlDatosPersonales2.add(btnMedallaBronceN, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 140, -1, 50));

        btnMedallaBronce.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sakura/resources/botones/medallaBronce.png"))); // NOI18N
        btnMedallaBronce.setBorder(null);
        btnMedallaBronce.setBorderPainted(false);
        btnMedallaBronce.setContentAreaFilled(false);
        btnMedallaBronce.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMedallaBronce.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMedallaBronceActionPerformed(evt);
            }
        });
        pnlDatosPersonales2.add(btnMedallaBronce, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 140, -1, 50));

        REPRESENTANTE2.setForeground(new java.awt.Color(0, 0, 0));
        REPRESENTANTE2.setText("Categoría");
        REPRESENTANTE2.setColorDeSombra(new java.awt.Color(255, 255, 51));
        REPRESENTANTE2.setDistanciaDeSombra(1);
        pnlDatosPersonales2.add(REPRESENTANTE2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, 20));

        btnMedallaOroC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sakura/resources/botones/medallaOro.png"))); // NOI18N
        btnMedallaOroC.setBorder(null);
        btnMedallaOroC.setBorderPainted(false);
        btnMedallaOroC.setContentAreaFilled(false);
        btnMedallaOroC.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMedallaOroC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMedallaOroCActionPerformed(evt);
            }
        });
        pnlDatosPersonales2.add(btnMedallaOroC, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, 50));

        btnMedallaPlataC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sakura/resources/botones/medallaPlata.png"))); // NOI18N
        btnMedallaPlataC.setBorder(null);
        btnMedallaPlataC.setBorderPainted(false);
        btnMedallaPlataC.setContentAreaFilled(false);
        btnMedallaPlataC.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMedallaPlataC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMedallaPlataCActionPerformed(evt);
            }
        });
        pnlDatosPersonales2.add(btnMedallaPlataC, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 140, -1, 50));

        btnMedallaBronceC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sakura/resources/botones/medallaBronce.png"))); // NOI18N
        btnMedallaBronceC.setBorder(null);
        btnMedallaBronceC.setBorderPainted(false);
        btnMedallaBronceC.setContentAreaFilled(false);
        btnMedallaBronceC.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMedallaBronceC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMedallaBronceCActionPerformed(evt);
            }
        });
        pnlDatosPersonales2.add(btnMedallaBronceC, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 140, -1, 50));

        pnlCurvas.add(pnlDatosPersonales2, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 300, 370, 250));

        pnlDatosPersonales1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 2, true), "Datos de competencia", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        pnlDatosPersonales1.setTran(0.0F);
        pnlDatosPersonales1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        NOMBRE1.setBackground(new java.awt.Color(255, 255, 255));
        NOMBRE1.setForeground(new java.awt.Color(0, 0, 0));
        NOMBRE1.setText("Nombre");
        NOMBRE1.setColorDeSombra(new java.awt.Color(255, 255, 51));
        NOMBRE1.setDistanciaDeSombra(1);
        pnlDatosPersonales1.add(NOMBRE1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, 20));

        txtNombreCompetencia.setBackground(new java.awt.Color(0, 204, 255));
        txtNombreCompetencia.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 102), 3));
        txtNombreCompetencia.setAnchoDeBorde(4.0F);
        txtNombreCompetencia.setColorDeBorde(new java.awt.Color(255, 255, 102));
        txtNombreCompetencia.setDisabledTextColor(new java.awt.Color(255, 0, 0));
        txtNombreCompetencia.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        pnlDatosPersonales1.add(txtNombreCompetencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 150, 30));

        APELLIDO1.setBackground(new java.awt.Color(255, 255, 255));
        APELLIDO1.setForeground(new java.awt.Color(0, 0, 0));
        APELLIDO1.setText("Ciudad/País");
        APELLIDO1.setColorDeSombra(new java.awt.Color(255, 255, 51));
        APELLIDO1.setDistanciaDeSombra(1);
        pnlDatosPersonales1.add(APELLIDO1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, 20));

        txtLugarCompetencia.setBackground(new java.awt.Color(0, 204, 255));
        txtLugarCompetencia.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 102), 3));
        txtLugarCompetencia.setAnchoDeBorde(4.0F);
        txtLugarCompetencia.setColorDeBorde(new java.awt.Color(255, 255, 102));
        txtLugarCompetencia.setDisabledTextColor(new java.awt.Color(204, 204, 204));
        txtLugarCompetencia.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        pnlDatosPersonales1.add(txtLugarCompetencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 150, 30));

        FECHA.setForeground(new java.awt.Color(0, 0, 0));
        FECHA.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        FECHA.setText("Fecha final");
        FECHA.setColorDeSombra(new java.awt.Color(255, 255, 51));
        FECHA.setDistanciaDeSombra(1);
        pnlDatosPersonales1.add(FECHA, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 180, 120, 20));

        dcFechaFinal.setBackground(new java.awt.Color(255, 255, 102));
        dcFechaFinal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 102), 3));
        dcFechaFinal.setDateFormatString("dd-MM-yyyy");
        dcFechaFinal.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        dcFechaFinal.setMinSelectableDate(new java.util.Date(-62135749683000L));
        pnlDatosPersonales1.add(dcFechaFinal, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 200, 120, 30));

        REPRESENTANTE.setForeground(new java.awt.Color(0, 0, 0));
        REPRESENTANTE.setText("Tipo");
        REPRESENTANTE.setColorDeSombra(new java.awt.Color(255, 255, 51));
        REPRESENTANTE.setDistanciaDeSombra(1);
        pnlDatosPersonales1.add(REPRESENTANTE, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 60, -1, 20));

        cbTipoFederacion.setBackground(new java.awt.Color(0, 204, 255));
        cbTipoFederacion.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 102)));
        cbTipoFederacion.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "----------", "Oficial", "Recreativa" }));
        cbTipoFederacion.setAnchoDeBorde(4.0F);
        cbTipoFederacion.setColorDeBorde(new java.awt.Color(255, 255, 102));
        cbTipoFederacion.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cbTipoFederacion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbTipoFederacionItemStateChanged(evt);
            }
        });
        pnlDatosPersonales1.add(cbTipoFederacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 80, 150, 30));

        NOMBRE3.setBackground(new java.awt.Color(255, 255, 255));
        NOMBRE3.setForeground(new java.awt.Color(0, 0, 0));
        NOMBRE3.setText("Lugar");
        NOMBRE3.setColorDeSombra(new java.awt.Color(255, 255, 51));
        NOMBRE3.setDistanciaDeSombra(1);
        pnlDatosPersonales1.add(NOMBRE3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, -1, 20));

        txtArena.setBackground(new java.awt.Color(0, 204, 255));
        txtArena.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 102), 3));
        txtArena.setAnchoDeBorde(4.0F);
        txtArena.setColorDeBorde(new java.awt.Color(255, 255, 102));
        txtArena.setDisabledTextColor(new java.awt.Color(255, 0, 0));
        txtArena.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        pnlDatosPersonales1.add(txtArena, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 150, 30));

        txtFederacion.setBackground(new java.awt.Color(0, 204, 255));
        txtFederacion.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 102), 3));
        txtFederacion.setAnchoDeBorde(4.0F);
        txtFederacion.setColorDeBorde(new java.awt.Color(255, 255, 102));
        txtFederacion.setDisabledTextColor(new java.awt.Color(255, 0, 0));
        txtFederacion.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        pnlDatosPersonales1.add(txtFederacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 130, 150, 30));

        NOMBRE4.setBackground(new java.awt.Color(255, 255, 255));
        NOMBRE4.setForeground(new java.awt.Color(0, 0, 0));
        NOMBRE4.setText("Federación encargada");
        NOMBRE4.setColorDeSombra(new java.awt.Color(255, 255, 51));
        NOMBRE4.setDistanciaDeSombra(1);
        pnlDatosPersonales1.add(NOMBRE4, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 110, -1, 20));

        dcFechaInicio.setBackground(new java.awt.Color(255, 255, 102));
        dcFechaInicio.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 102), 3));
        dcFechaInicio.setDateFormatString("dd-MM-yyyy");
        dcFechaInicio.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        dcFechaInicio.setMinSelectableDate(new java.util.Date(-62135749683000L));
        pnlDatosPersonales1.add(dcFechaInicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, 120, 30));

        FECHA4.setForeground(new java.awt.Color(0, 0, 0));
        FECHA4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        FECHA4.setText("Hasta el");
        FECHA4.setColorDeSombra(new java.awt.Color(255, 255, 51));
        FECHA4.setDistanciaDeSombra(1);
        pnlDatosPersonales1.add(FECHA4, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 200, 80, 30));

        FECHA5.setForeground(new java.awt.Color(0, 0, 0));
        FECHA5.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        FECHA5.setText("Fecha de inicio");
        FECHA5.setColorDeSombra(new java.awt.Color(255, 255, 51));
        FECHA5.setDistanciaDeSombra(1);
        pnlDatosPersonales1.add(FECHA5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 120, 20));

        pnlCurvas.add(pnlDatosPersonales1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 300, 360, 250));

        pnlDatosPersonales.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 2, true), "Datos de competición", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        pnlDatosPersonales.setTran(0.0F);
        pnlDatosPersonales.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CEDULA.setBackground(new java.awt.Color(255, 255, 255));
        CEDULA.setForeground(new java.awt.Color(0, 0, 0));
        CEDULA.setText("Nº Cédula");
        CEDULA.setColorDeSombra(new java.awt.Color(255, 255, 51));
        CEDULA.setDistanciaDeSombra(1);
        pnlDatosPersonales.add(CEDULA, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 150, -1, 20));

        FOTO.setBackground(new java.awt.Color(255, 255, 255));
        FOTO.setForeground(new java.awt.Color(0, 0, 0));
        FOTO.setText("Foto");
        FOTO.setColorDeSombra(new java.awt.Color(255, 255, 51));
        FOTO.setDistanciaDeSombra(1);
        pnlDatosPersonales.add(FOTO, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, 20));

        NOMBRE.setBackground(new java.awt.Color(255, 255, 255));
        NOMBRE.setForeground(new java.awt.Color(0, 0, 0));
        NOMBRE.setText("Nombre");
        NOMBRE.setColorDeSombra(new java.awt.Color(255, 255, 51));
        NOMBRE.setDistanciaDeSombra(1);
        pnlDatosPersonales.add(NOMBRE, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 50, -1, 20));

        APELLIDO.setBackground(new java.awt.Color(255, 255, 255));
        APELLIDO.setForeground(new java.awt.Color(0, 0, 0));
        APELLIDO.setText("Apellido");
        APELLIDO.setColorDeSombra(new java.awt.Color(255, 255, 51));
        APELLIDO.setDistanciaDeSombra(1);
        pnlDatosPersonales.add(APELLIDO, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 100, -1, 20));

        pnlFoto.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 102), 3, true));
        pnlFoto.setToolTipText("Clic para agregar una foto");
        pnlFoto.setColorPrimario(new java.awt.Color(255, 255, 255));
        pnlFoto.setColorSecundario(new java.awt.Color(0, 204, 255));
        pnlFoto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlFotoMouseClicked(evt);
            }
        });
        pnlFoto.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnFoto.setBorder(javax.swing.BorderFactory.createEmptyBorder(108, 2, 100, 100));
        btnFoto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sakura/resources/botones/foto.png"))); // NOI18N
        btnFoto.setText(" ");
        btnFoto.setAlignmentY(0.0F);
        btnFoto.setAnchoDeBorde(0.0F);
        btnFoto.setBorderPainted(false);
        btnFoto.setColorDeBorde(new java.awt.Color(255, 0, 0));
        btnFoto.setColorDeSegundoBorde(new java.awt.Color(0, 255, 51));
        btnFoto.setDescription(" ");
        btnFoto.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnFoto.setRolloverEnabled(false);
        btnFoto.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        btnFoto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnFotoMouseClicked(evt);
            }
        });
        btnFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFotoActionPerformed(evt);
            }
        });
        pnlFoto.add(btnFoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 130, 160));

        pnlImagenFoto.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 102), 3, true));
        pnlImagenFoto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sakura/resources/botones/foto.png"))); // NOI18N
        pnlImagenFoto.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        pnlFoto.add(pnlImagenFoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 120, 150));

        pnlDatosPersonales.add(pnlFoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 130, 160));

        txtApellido.setEditable(false);
        txtApellido.setBackground(new java.awt.Color(0, 204, 255));
        txtApellido.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 102), 3));
        txtApellido.setAnchoDeBorde(4.0F);
        txtApellido.setColorDeBorde(new java.awt.Color(255, 255, 102));
        txtApellido.setDisabledTextColor(new java.awt.Color(204, 204, 204));
        txtApellido.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        pnlDatosPersonales.add(txtApellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 120, 150, 30));

        txtCedula.setEditable(false);
        txtCedula.setBackground(new java.awt.Color(0, 204, 255));
        txtCedula.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 102), 3));
        txtCedula.setAnchoDeBorde(4.0F);
        txtCedula.setColorDeBorde(new java.awt.Color(255, 255, 102));
        txtCedula.setDisabledTextColor(new java.awt.Color(204, 204, 204));
        txtCedula.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtCedula.setName(""); // NOI18N
        txtCedula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCedulaKeyTyped(evt);
            }
        });
        pnlDatosPersonales.add(txtCedula, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 170, 150, 30));

        txtNombre.setEditable(false);
        txtNombre.setBackground(new java.awt.Color(0, 204, 255));
        txtNombre.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 102), 3));
        txtNombre.setAnchoDeBorde(4.0F);
        txtNombre.setColorDeBorde(new java.awt.Color(255, 255, 102));
        txtNombre.setDisabledTextColor(new java.awt.Color(255, 0, 0));
        txtNombre.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        pnlDatosPersonales.add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 70, 150, 30));

        txtEdad.setEditable(false);
        txtEdad.setBackground(new java.awt.Color(0, 204, 255));
        txtEdad.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 102), 3));
        txtEdad.setAnchoDeBorde(4.0F);
        txtEdad.setColorDeBorde(new java.awt.Color(255, 255, 102));
        txtEdad.setDisabledTextColor(new java.awt.Color(204, 204, 204));
        txtEdad.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtEdad.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEdadFocusLost(evt);
            }
        });
        txtEdad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEdadKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEdadKeyTyped(evt);
            }
        });
        pnlDatosPersonales.add(txtEdad, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 100, 150, 30));

        EDAD.setBackground(new java.awt.Color(255, 255, 255));
        EDAD.setForeground(new java.awt.Color(0, 0, 0));
        EDAD.setText("Edad");
        EDAD.setColorDeSombra(new java.awt.Color(255, 255, 51));
        EDAD.setDistanciaDeSombra(1);
        pnlDatosPersonales.add(EDAD, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 80, -1, 20));

        SEXO.setBackground(new java.awt.Color(255, 255, 255));
        SEXO.setForeground(new java.awt.Color(0, 0, 0));
        SEXO.setText("Sexo");
        SEXO.setColorDeSombra(new java.awt.Color(255, 255, 51));
        SEXO.setDistanciaDeSombra(1);
        pnlDatosPersonales.add(SEXO, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 130, -1, 20));

        txtSexo.setEditable(false);
        txtSexo.setBackground(new java.awt.Color(0, 204, 255));
        txtSexo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 102), 3));
        txtSexo.setAnchoDeBorde(4.0F);
        txtSexo.setColorDeBorde(new java.awt.Color(255, 255, 102));
        txtSexo.setDisabledTextColor(new java.awt.Color(204, 204, 204));
        txtSexo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtSexo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSexoFocusLost(evt);
            }
        });
        txtSexo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSexoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSexoKeyTyped(evt);
            }
        });
        pnlDatosPersonales.add(txtSexo, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 150, 150, 30));

        pnlCurvas.add(pnlDatosPersonales, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 60, 510, 230));

        pnlFondo.add(pnlCurvas, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 850, 630));

        progressbarBarra.setBackground(new java.awt.Color(0, 204, 255));
        progressbarBarra.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));
        progressbarBarra.setForeground(new java.awt.Color(255, 255, 0));
        progressbarBarra.setToolTipText("");
        progressbarBarra.setBorde(5.0F);
        progressbarBarra.setBorderPainted(false);
        progressbarBarra.setColorDeBorde(new java.awt.Color(0, 0, 0));
        progressbarBarra.setDistanciaDeSombra(5);
        progressbarBarra.setFocusable(false);
        progressbarBarra.setFont(new java.awt.Font("SunnySide", 1, 36)); // NOI18N
        progressbarBarra.setString("Trayectoria - Danza");
        progressbarBarra.setStringPainted(true);
        pnlFondo.add(progressbarBarra, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 0, 550, 60));

        getContentPane().add(pnlFondo, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed

        TVbtnBuscarActionPerformed();
        
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed

        HabilitarDatos();
        e(0,btnEditar);
        v(0,btnGuardar);
        v(1,btnGuardarCambios);

        if(btnMedallaOroC.isVisible()==true){
            v(0,btnMedallaOroC);
            v(0,btnMedallaOroN);
            v(1,btnMedallaOro);
            e(1,spinnerLugar);
        }

        if(btnMedallaPlataC.isVisible()==true){
            v(0,btnMedallaPlataC);
            v(0,btnMedallaPlataN);
            v(1,btnMedallaPlata);
            e(1,spinnerLugar);
        }

        if(btnMedallaBronceC.isVisible()==true){
            v(0,btnMedallaBronceC);
            v(0,btnMedallaBronceN);
            v(1,btnMedallaBronce);
            e(1,spinnerLugar);
        }

    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed

        try {
            TVbtnGuardarActionPerformed();
        } catch (SQLException ex) {
            JOptionPane.showInternalMessageDialog(pnlFondo, "Error: "+ex.getMessage(),"ERROR",JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnGuardarCambiosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarCambiosActionPerformed

        try {
            UpdateDatosInscripcion();
        } catch (SQLException ex) {
            JOptionPane.showInternalMessageDialog(pnlFondo, "Error: "+ex.getMessage(),"Error",JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_btnGuardarCambiosActionPerformed

    private void cbCategoriaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbCategoriaItemStateChanged

        if(cbCategoria.getSelectedItem().equals("Arbitraje")){

            lugar = 0;
            spinnerLugar.getModel().setValue(0);

            v(1,btnMedallaOroN);
            v(1,btnMedallaPlataN);
            v(1,btnMedallaBronceN);

            this.lblPrimerLugar.setForeground(new Color(0,0,0));
            this.lblSegundoLugar.setForeground(new Color(0,0,0));
            this.lblTercerLugar.setForeground(new Color(0,0,0));

            e(0,btnMedallaOroN);
            e(0,btnMedallaPlataN);
            e(0,btnMedallaBronceN);
            e(0,spinnerLugar);

            v(0,btnMedallaOro);
            v(0,btnMedallaPlata);
            v(0,btnMedallaBronce);

        }else if(cbCategoria.getSelectedItem().equals("Coach")){

            lugar = 0;
            spinnerLugar.getModel().setValue(0);

            v(1,btnMedallaOroN);
            v(1,btnMedallaPlataN);
            v(1,btnMedallaBronceN);

            this.lblPrimerLugar.setForeground(new Color(0,0,0));
            this.lblSegundoLugar.setForeground(new Color(0,0,0));
            this.lblTercerLugar.setForeground(new Color(0,0,0));

            e(0,btnMedallaOroN);
            e(0,btnMedallaPlataN);
            e(0,btnMedallaBronceN);
            e(0,spinnerLugar);

            v(0,btnMedallaOro);
            v(0,btnMedallaPlata);
            v(0,btnMedallaBronce);

        }else{

            lugar = 0;
            spinnerLugar.getModel().setValue(0);
            e(1,spinnerLugar);

            v(1,btnMedallaOroN);
            v(0,btnMedallaOro);
            v(1,btnMedallaPlataN);
            v(0,btnMedallaPlata);
            v(1,btnMedallaBronceN);
            v(0,btnMedallaBronce);

            lblPrimerLugar.setForeground(new Color(0,0,0));
            lblSegundoLugar.setForeground(new Color(0,0,0));
            lblTercerLugar.setForeground(new Color(0,0,0));

        }
    }//GEN-LAST:event_cbCategoriaItemStateChanged

    private void cbEdadesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbEdadesItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cbEdadesItemStateChanged

    private void spinnerLugarStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinnerLugarStateChanged

        lugar = Integer.parseInt(spinnerLugar.getModel().getValue().toString());

        if(Integer.parseInt(spinnerLugar.getModel().getValue().toString())==1){
            lugar = 1;
            spinnerLugar.getModel().setValue(1);
            v(0,btnMedallaOroN);
            v(1,btnMedallaOro);

            v(0,btnMedallaPlata);
            v(0,btnMedallaBronce);
            v(1,btnMedallaPlataN);
            v(1,btnMedallaBronceN);

            lblPrimerLugar.setForeground(new Color(255,255,0));
            lblTercerLugar.setForeground(new Color(0,0,0));
            lblSegundoLugar.setForeground(new Color(0,0,0));
        }

        if(Integer.parseInt(spinnerLugar.getModel().getValue().toString())==2){
            lugar = 2;
            spinnerLugar.getModel().setValue(2);
            v(0,btnMedallaPlataN);
            v(1,btnMedallaPlata);

            v(0,btnMedallaOro);
            v(0,btnMedallaBronce);
            v(1,btnMedallaOroN);
            v(1,btnMedallaBronceN);

            lblSegundoLugar.setForeground(new Color(153,153,153));
            lblTercerLugar.setForeground(new Color(0,0,0));
            lblPrimerLugar.setForeground(new Color(0,0,0));
        }

        if(Integer.parseInt(spinnerLugar.getModel().getValue().toString())==3){
            lugar = 3;
            spinnerLugar.getModel().setValue(3);
            v(0,btnMedallaBronceN);
            v(1,btnMedallaBronce);

            v(0,btnMedallaPlata);
            v(0,btnMedallaOro);
            v(1,btnMedallaPlataN);
            v(1,btnMedallaOroN);

            lblTercerLugar.setForeground(new Color(255,153,0));
            lblPrimerLugar.setForeground(new Color(0,0,0));
            lblSegundoLugar.setForeground(new Color(0,0,0));
        }

        if(Integer.parseInt(spinnerLugar.getModel().getValue().toString())>=4 || Integer.parseInt(spinnerLugar.getModel().getValue().toString())==0){

            v(0,btnMedallaBronce);
            v(0,btnMedallaPlata);
            v(0,btnMedallaOro);
            v(1,btnMedallaOroN);
            v(1,btnMedallaPlataN);
            v(1,btnMedallaBronceN);

            lblTercerLugar.setForeground(new Color(0,0,0));
            lblPrimerLugar.setForeground(new Color(0,0,0));
            lblSegundoLugar.setForeground(new Color(0,0,0));
        }

    }//GEN-LAST:event_spinnerLugarStateChanged

    private void btnMedallaOroNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMedallaOroNActionPerformed

        lugar = 1;
        spinnerLugar.getModel().setValue(1);
        v(0,btnMedallaOroN);
        v(1,btnMedallaOro);

        v(0,btnMedallaPlata);
        v(0,btnMedallaBronce);
        v(1,btnMedallaPlataN);
        v(1,btnMedallaBronceN);

        lblPrimerLugar.setForeground(new Color(255,255,0));
        lblTercerLugar.setForeground(new Color(0,0,0));
        lblSegundoLugar.setForeground(new Color(0,0,0));

    }//GEN-LAST:event_btnMedallaOroNActionPerformed

    private void btnMedallaOroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMedallaOroActionPerformed

        lugar = 0;
        spinnerLugar.getModel().setValue(0);
        e(1,spinnerLugar);
        v(1,btnMedallaOroN);
        v(0,btnMedallaOro);

        lblPrimerLugar.setForeground(new Color(0,0,0));
    }//GEN-LAST:event_btnMedallaOroActionPerformed

    private void btnMedallaPlataNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMedallaPlataNActionPerformed

        lugar = 2;
        spinnerLugar.getModel().setValue(2);
        v(0,btnMedallaPlataN);
        v(1,btnMedallaPlata);

        v(0,btnMedallaOro);
        v(0,btnMedallaBronce);
        v(1,btnMedallaOroN);
        v(1,btnMedallaBronceN);

        lblSegundoLugar.setForeground(new Color(153,153,153));
        lblTercerLugar.setForeground(new Color(0,0,0));
        lblPrimerLugar.setForeground(new Color(0,0,0));

    }//GEN-LAST:event_btnMedallaPlataNActionPerformed

    private void btnMedallaPlataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMedallaPlataActionPerformed

        lugar = 0;
        spinnerLugar.getModel().setValue(0);
        e(1,spinnerLugar);
        v(1,btnMedallaPlataN);
        v(0,btnMedallaPlata);

        lblSegundoLugar.setForeground(new Color(0,0,0));

    }//GEN-LAST:event_btnMedallaPlataActionPerformed

    private void btnMedallaBronceNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMedallaBronceNActionPerformed

        lugar = 3;
        spinnerLugar.getModel().setValue(3);
        v(0,btnMedallaBronceN);
        v(1,btnMedallaBronce);

        v(0,btnMedallaPlata);
        v(0,btnMedallaOro);
        v(1,btnMedallaPlataN);
        v(1,btnMedallaOroN);

        lblTercerLugar.setForeground(new Color(255,153,0));
        lblPrimerLugar.setForeground(new Color(0,0,0));
        lblSegundoLugar.setForeground(new Color(0,0,0));

    }//GEN-LAST:event_btnMedallaBronceNActionPerformed

    private void btnMedallaBronceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMedallaBronceActionPerformed

        lugar = 0;
        spinnerLugar.getModel().setValue(0);
        e(1,spinnerLugar);
        v(1,btnMedallaBronceN);
        v(0,btnMedallaBronce);

        lblTercerLugar.setForeground(new Color(0,0,0));

    }//GEN-LAST:event_btnMedallaBronceActionPerformed

    private void btnMedallaOroCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMedallaOroCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnMedallaOroCActionPerformed

    private void btnMedallaPlataCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMedallaPlataCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnMedallaPlataCActionPerformed

    private void btnMedallaBronceCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMedallaBronceCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnMedallaBronceCActionPerformed

    private void cbTipoFederacionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbTipoFederacionItemStateChanged
    }//GEN-LAST:event_cbTipoFederacionItemStateChanged

    private void btnFotoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFotoMouseClicked

    }//GEN-LAST:event_btnFotoMouseClicked

    private void btnFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFotoActionPerformed

    }//GEN-LAST:event_btnFotoActionPerformed

    private void pnlFotoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlFotoMouseClicked

    }//GEN-LAST:event_pnlFotoMouseClicked

    private void txtCedulaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCedulaKeyTyped

    }//GEN-LAST:event_txtCedulaKeyTyped

    private void txtEdadFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEdadFocusLost

    }//GEN-LAST:event_txtEdadFocusLost

    private void txtEdadKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEdadKeyReleased

    }//GEN-LAST:event_txtEdadKeyReleased

    private void txtEdadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEdadKeyTyped

    }//GEN-LAST:event_txtEdadKeyTyped

    private void txtSexoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSexoFocusLost

    }//GEN-LAST:event_txtSexoFocusLost

    private void txtSexoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSexoKeyReleased

    }//GEN-LAST:event_txtSexoKeyReleased

    private void txtSexoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSexoKeyTyped

    }//GEN-LAST:event_txtSexoKeyTyped

    private void txtBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyTyped

        txtBuscar.addKeyListener(new KeyAdapter() {

            public void keyReleased(final KeyEvent e){

                String cadena = (txtBuscar.getText());
                e(1,txtBuscar);
                txtBuscar.setText(cadena);
                repaint();
                filtro();
            }
        });

        trsFiltro = new TableRowSorter(tblDanzinas.getModel());
        tblDanzinas.setRowSorter(trsFiltro);
    }//GEN-LAST:event_txtBuscarKeyTyped

    private void cbBuscarItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbBuscarItemStateChanged

    }//GEN-LAST:event_cbBuscarItemStateChanged

    private void pnlBuscadorCompetidorCompetidorMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlBuscadorCompetidorCompetidorMouseDragged

    }//GEN-LAST:event_pnlBuscadorCompetidorCompetidorMouseDragged

    private void pnlBuscadorCompetidorCompetidorMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlBuscadorCompetidorCompetidorMousePressed

    }//GEN-LAST:event_pnlBuscadorCompetidorCompetidorMousePressed

    private void tblDanzinasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDanzinasMouseClicked

        TVtblAfiliadosMouseClicked();
    }//GEN-LAST:event_tblDanzinasMouseClicked

    private void tblCompetenciasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCompetenciasMouseClicked

        TVtblCompetenciasMouseClicked();

    }//GEN-LAST:event_tblCompetenciasMouseClicked

    private void txtBuscar1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscar1KeyTyped

        txtBuscar1.addKeyListener(new KeyAdapter() {

            public void keyReleased(final KeyEvent e){

                String cadena = (txtBuscar1.getText());
                e(1,txtBuscar1);
                txtBuscar1.setText(cadena);
                repaint();
                filtroCompetencias();
            }
        });

        trsFiltro1 = new TableRowSorter(tblCompetencias.getModel());
        tblCompetencias.setRowSorter(trsFiltro1);
        
    }//GEN-LAST:event_txtBuscar1KeyTyped

    private void cbBuscar1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbBuscar1ItemStateChanged

    }//GEN-LAST:event_cbBuscar1ItemStateChanged

    private void btnEliminar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminar2ActionPerformed

        int confirmar =JOptionPane.showConfirmDialog(pnlFondo,"¿Desea eliminar la competencia?");

            if(JOptionPane.OK_OPTION == confirmar){
        
                try{

                    connection = Conectar.getConnection();
                    PreparedStatement ps = connection.prepareStatement("DELETE FROM trayectodanza WHERE id='"+id+"'");
                    int res = ps.executeUpdate();

                    if(res > 0){
                        JOptionPane.showInternalMessageDialog(pnlFondo, "Competencia eliminada con éxito.", "AVISO", JOptionPane.INFORMATION_MESSAGE);
                        InsertDatosEnTablaCompetencias(cedula);
                        LimpiarCajas();
                        
                    }else{
                        JOptionPane.showInternalMessageDialog(pnlFondo, "Error al eliminar", "ERROR", JOptionPane.ERROR_MESSAGE);

                    }

                }catch(SQLException ex){
                    JOptionPane.showInternalMessageDialog(pnlFondo, "Error: "+ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
                }
            }
        
    }//GEN-LAST:event_btnEliminar2ActionPerformed

    private void pnlBuscadorCompetenciaCompetidorMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlBuscadorCompetenciaCompetidorMouseDragged

    }//GEN-LAST:event_pnlBuscadorCompetenciaCompetidorMouseDragged

    private void pnlBuscadorCompetenciaCompetidorMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlBuscadorCompetenciaCompetidorMousePressed

    }//GEN-LAST:event_pnlBuscadorCompetenciaCompetidorMousePressed

    private void HabilitarDatos(){

        //DATOS COMPETENCIA
        this.txtNombreCompetencia.setEditable(true);
        this.txtLugarCompetencia.setEditable(true);
        this.txtArena.setEditable(true);
        e(1,cbTipoFederacion);
        this.txtFederacion.setEditable(true);
        e(1,dcFechaInicio);
        e(1,dcFechaFinal);

        //DATOS COMPETICIÓN
        e(1,dcFechaIda);
        e(1,dcFechaRegreso);
        e(1,cbCategoria);
        e(1,cbEdades);
        e(1,btnMedallaOroN);
        e(1,btnMedallaPlataN);
        e(1,btnMedallaBronceN);
        e(1,btnMedallaOro);
        e(1,btnMedallaPlata);
        e(1,btnMedallaBronce);
        e(1,spinnerLugar);

        this.txtNombreCompetencia.setBackground(amar);
        this.txtLugarCompetencia.setBackground(amar);
        this.txtArena.setBackground(amar);
        this.cbTipoFederacion.setBackground(amar);
        this.txtFederacion.setBackground(amar);

        this.cbCategoria.setBackground(amar);
        this.cbEdades.setBackground(amar);
        
        this.txtNombreCompetencia.setColorDeBorde(new java.awt.Color(0,0,0));
        this.txtLugarCompetencia.setColorDeBorde(new java.awt.Color(0,0,0));
        this.txtArena.setColorDeBorde(new java.awt.Color(0,0,0));
        this.cbTipoFederacion.setColorDeBorde(new java.awt.Color(0,0,0));
        this.txtFederacion.setColorDeBorde(new java.awt.Color(0,0,0));
        this.dcFechaInicio.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0,0,0), 3));
        this.dcFechaFinal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0,0,0), 3));
        
        this.dcFechaIda.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0,0,0), 3));
        this.dcFechaRegreso.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0,0,0), 3));
        this.cbCategoria.setColorDeBorde(new java.awt.Color(0,0,0));
        this.cbEdades.setColorDeBorde(new java.awt.Color(0,0,0));
        
    }
    
     private void InhabilitarDatos(){

        //DATOS COMPETENCIA
        this.txtNombreCompetencia.setEditable(false);
        this.txtLugarCompetencia.setEditable(false);
        this.txtArena.setEditable(false);
        e(0,cbTipoFederacion);
        this.txtFederacion.setEditable(false);
        e(0,dcFechaInicio);
        e(0,dcFechaFinal);
        
        //DATOS COMPETICIÓN
        e(0,dcFechaIda);
        e(0,dcFechaRegreso);
        e(0,cbCategoria);
        e(0,cbEdades);
        /*e(0,btnMedallaOro);
        e(0,btnMedallaPlata);
        e(0,btnMedallaBronce);
        e(0,btnMedallaOro1);
        e(0,btnMedallaPlata1);
        e(0,btnMedallaBronce1);*/
        e(0,spinnerLugar);

        this.txtNombreCompetencia.setBackground(azul);
        this.txtLugarCompetencia.setBackground(azul);
        this.txtArena.setBackground(azul);
        this.cbTipoFederacion.setBackground(azul);
        this.txtFederacion.setBackground(azul);

        this.cbCategoria.setBackground(azul);
        this.cbEdades.setBackground(azul);
        
        this.txtNombreCompetencia.setColorDeBorde(new java.awt.Color(255,255,102));
        this.txtLugarCompetencia.setColorDeBorde(new java.awt.Color(255,255,102));
        this.txtArena.setColorDeBorde(new java.awt.Color(255,255,102));
        this.cbTipoFederacion.setColorDeBorde(new java.awt.Color(255,255,102));
        this.txtFederacion.setColorDeBorde(new java.awt.Color(255,255,102));
        this.dcFechaInicio.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255,255,102), 3));
        this.dcFechaFinal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255,255,102), 3));
        
        this.dcFechaIda.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255,255,102), 3));
        this.dcFechaRegreso.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255,255,102), 3));
        this.cbCategoria.setColorDeBorde(new java.awt.Color(255,255,102));
        this.cbEdades.setColorDeBorde(new java.awt.Color(255,255,102));
        
    }
    
    private void LimpiarCajas(){

        //PERSONALES
        this.txtNombre.setText(null);
        this.txtApellido.setText(null);
        this.txtCedula.setText(null);
        this.txtEdad.setText(null);
        this.txtSexo.setText(null);
        this.pnlImagenFoto.setIcon(new ImageIcon(System.getProperty("user.dir")+"/src/sakura/resources/botones/foto.png"));
        e(0,btnFoto);
        this.pnlImagenFoto.updateUI();
        this.cedula = -1;
        
        //COMPETENCIA
        this.txtNombreCompetencia.setText(null);
        this.txtLugarCompetencia.setText(null);
        this.txtArena.setText(null);
        this.cbTipoFederacion.setSelectedItem("----------");
        this.txtFederacion.setText(null);
        this.dcFechaInicio.setDate(null);
        this.dcFechaFinal.setDate(null);

        //COMPETICIÓN
        this.dcFechaIda.setDate(null);
        this.dcFechaRegreso.setDate(null);
        this.cbCategoria.setSelectedItem("----------");
        this.cbEdades.setSelectedItem("----------");
        this.lugar = 0;
        this.spinnerLugar.setValue(0);
        this.lblPrimerLugar.setForeground(new Color(0,0,0));
        this.lblSegundoLugar.setForeground(new Color(0,0,0));
        this.lblTercerLugar.setForeground(new Color(0,0,0));
        v(1,btnMedallaOroN);
        v(1,btnMedallaPlataN);
        v(1,btnMedallaBronceN);
        

    }
    
    private void LimpiarCajasCompetencias(){
        
        //COMPETENCIA
        this.txtNombreCompetencia.setText(null);
        this.txtLugarCompetencia.setText(null);
        this.txtArena.setText(null);
        this.cbTipoFederacion.setSelectedItem("----------");
        this.txtFederacion.setText(null);
        this.dcFechaInicio.setDate(null);
        this.dcFechaFinal.setDate(null);

        //COMPETICIÓN
        this.dcFechaIda.setDate(null);
        this.dcFechaRegreso.setDate(null);
        this.cbCategoria.setSelectedItem("----------");
        this.cbEdades.setSelectedItem("----------");
        this.lugar = 0;
        this.spinnerLugar.getModel().setValue(0);
        this.lblPrimerLugar.setForeground(new Color(0,0,0));
        this.lblSegundoLugar.setForeground(new Color(0,0,0));
        this.lblTercerLugar.setForeground(new Color(0,0,0));

    }
    
    private void filtro(){
        
        int columnaABuscar=0;

        if(cbBuscar.getSelectedItem()=="Nombre"){ columnaABuscar = 0; }
        if(cbBuscar.getSelectedItem()=="Apellido"){ columnaABuscar = 1; }
        if(cbBuscar.getSelectedItem()=="Nº Cédula"){ columnaABuscar = 2; }
        //if(cbBuscar.getSelectedItem()=="Categoría"){ columnaABuscar = 3; }
        //if(cbBuscar.getSelectedItem()=="Sexo"){ columnaABuscar = 6; }

        trsFiltro.setRowFilter(RowFilter.regexFilter("(?i)"+txtBuscar.getText(), columnaABuscar));
        
   }
    
    private void filtroCompetencias(){
        
        int columnaABuscar=0;

        if(cbBuscar1.getSelectedItem()=="Nombre"){ columnaABuscar = 1; }
        if(cbBuscar1.getSelectedItem()=="Categoria"){ columnaABuscar = 2; }
        if(cbBuscar1.getSelectedItem()=="Lugar"){ columnaABuscar = 3; }
        //if(cbBuscar.getSelectedItem()=="Categoría"){ columnaABuscar = 3; }
        //if(cbBuscar.getSelectedItem()=="Sexo"){ columnaABuscar = 6; }

        trsFiltro1.setRowFilter(RowFilter.regexFilter("(?i)"+txtBuscar1.getText(), columnaABuscar));
        
   }

    private class progreso implements ActionListener{
        
        public void actionPerformed(ActionEvent evt){
          
            int n = progressbarBarra.getValue();
            
            if(n < 100){
                n++;
                progressbarBarra.setValue(n);
       
                if(progressbarBarra.getValue() == 100){
                    JOptionPane.showInternalMessageDialog(pnlFondo, "Accion realizada con éxito","Aviso",JOptionPane.INFORMATION_MESSAGE);
                    LimpiarCajas();
                }

            }else{
                timer.stop();
                progressbarBarra.setValue(0);
            }
        }
    }

    private void e(int numAcc, Component comp){
        
        if(numAcc == 0){
            comp.setEnabled(false);
            comp.setFocusable(false);  
        }
        
        if(numAcc == 1){
            comp.setEnabled(true);
            comp.setFocusable(true);
        }
    }
    
    private void v(int numAcc, Component comp){
        
         if(numAcc == 0){
            comp.setVisible(false);
            comp.setEnabled(false);
            comp.setFocusable(false);
        }
        
        if(numAcc == 1){
            comp.setVisible(true);
            comp.setEnabled(true);
            comp.setFocusable(true);
        }
    }
    
    private void vn(int numAcc, Component comp){
        
         if(numAcc == 0){
            comp.setVisible(false);
        }
        
        if(numAcc == 1){
            comp.setVisible(true);
        }
    }

    private void TVbtnBuscarActionPerformed(){

        try{
            InsertDatosEnTablaDanzinas();
        }catch(SQLException ex){ JOptionPane.showMessageDialog(null,"Error: "+ex.getMessage()); }
        
        v(1,pnlBuscar);
        JOptionPane.showInternalMessageDialog(pnlFondo, pnlBuscar,"Buscador-Afiliados",JOptionPane.PLAIN_MESSAGE);
    }
    
    private void TVtblAfiliadosMouseClicked(){
        
        LimpiarCajas();
        
        try{
            int fila = tblDanzinas.getSelectedRow();
            int filaModel = tblDanzinas.convertRowIndexToModel(fila); //CONVIERTE LA FILA AL MODELO

            tblDanzinas.convertRowIndexToView(filaModel); //CONVIERTE LA FILA A LA VISTA
            modelo.fireTableDataChanged(); //POR SI HAY ALGUN ERROR, AVISA QUE LA TABLA HA CAMBIADO

            String tableClick = (tblDanzinas.getModel().getValueAt(filaModel, 2).toString());

            connection = Conectar.getConnection();
            PreparedStatement pst = connection.prepareStatement("SELECT * FROM datospersonales WHERE cedula = '"+tableClick+"'");
            ResultSet rs = pst.executeQuery();

            while(rs.next()){
                
                String add1 = rs.getString("nombre"); this.txtNombre.setText(add1);

                String add2 = rs.getString("apellido"); this.txtApellido.setText(add2);

                int add3 = rs.getInt("cedula"); this.txtCedula.setText(""+add3); cedula = add3;

                String add4 = rs.getString("sexo"); this.txtSexo.setText(add4);

                String add9 = rs.getString("foto"); this.URLImagen = add9;
                this.pnlImagenFoto.setIcon(new ImageIcon(System.getProperty("user.dir")+"/fotos/"+add9));
                this.pnlImagenFoto.updateUI();
                
                int add17 = rs.getInt("edad"); this.txtEdad.setText(""+add17);
                
                InsertDatosEnTablaCompetencias(rs.getInt("cedula"));

            }

        }catch(SQLException e){ JOptionPane.showInternalMessageDialog(pnlFondo, "Error: "+e.getMessage(),"Aviso",JOptionPane.WARNING_MESSAGE); }

        if(URLImagen.equals("")){
            v(0,btnFoto);
            this.pnlImagenFoto.setIcon(new ImageIcon(System.getProperty("user.dir")+"/src/sakura/resources/botones/foto.png"));       
        }else{ v(0,btnFoto); }

        HabilitarDatos();
        //e(0,cbFederacion);
        e(1,btnGuardar);
        e(0,btnEditar);
        v(0,btnGuardarCambios);
    }
    
    private void TVtblCompetenciasMouseClicked(){
        
        LimpiarCajasCompetencias();
        
        try{
            int fila = tblCompetencias.getSelectedRow();
            int filaModel = tblCompetencias.convertRowIndexToModel(fila); //CONVIERTE LA FILA AL MODELO

            tblCompetencias.convertRowIndexToView(filaModel); //CONVIERTE LA FILA A LA VISTA
            modelo1.fireTableDataChanged(); //POR SI HAY ALGUN ERROR, AVISA QUE LA TABLA HA CAMBIADO
            
            String tableClick = (tblCompetencias.getModel().getValueAt(filaModel, 0).toString());
            
            connection = Conectar.getConnection();
            PreparedStatement pst = connection.prepareStatement("SELECT * FROM trayectodanza WHERE id = '"+tableClick+"'");
            ResultSet rs = pst.executeQuery();

            while(rs.next()){
                
                int add0 = rs.getInt("id"); this.id = add0;
                
                String add1 = rs.getString("nombrecompetencia"); this.txtNombreCompetencia.setText(add1);

                String add2 = rs.getString("lugarcompetencia"); this.txtLugarCompetencia.setText(add2);

                String add3 = rs.getString("arena"); this.txtArena.setText(add3);

                String add4 = rs.getString("tipo");
                cbTipoFederacion.setSelectedItem(add4.equals("Sin identificar")?"----------":add4);

                String add6 = rs.getString("federacionencargada"); this.txtFederacion.setText(add6);
                
                String add7 = rs.getString("fechainicio"); dcFechaInicio.setDate(add7.equals("")?null:Date.valueOf(add7));
                
                String add8 = rs.getString("fechafinal"); this.dcFechaFinal.setDate(add8.equals("")?null:Date.valueOf(add8));
                
                String add9 = rs.getString("fechaida"); this.dcFechaIda.setDate(add9.equals("")?null:Date.valueOf(add9));
                
                String add10 = rs.getString("fecharegreso"); this.dcFechaRegreso.setDate(add10.equals("")?null:Date.valueOf(add10));
               
                String add11 = rs.getString("categoria"); this.cbCategoria.setSelectedItem(add11);
                
                String add12 = rs.getString("edades"); this.cbEdades.setSelectedItem(add12);
                
                e(0,btnMedallaOroN);
                e(0,btnMedallaPlataN);
                e(0,btnMedallaBronceN);
                
                if(rs.getInt("lugar")>=4){
                    spinnerLugar.getModel().setValue(rs.getInt("lugar"));
                    v(0,btnMedallaOroC);
                    v(0,btnMedallaPlataC);
                    v(0,btnMedallaBronceC);
                    v(1,btnMedallaOroN);
                    v(1,btnMedallaPlataN);
                    v(1,btnMedallaBronceN);
                    e(0,btnMedallaOroN);
                    e(0,btnMedallaPlataN);
                    e(0,btnMedallaBronceN);
                }
                
                if(rs.getInt("lugar")==3){
                    spinnerLugar.getModel().setValue(rs.getInt("lugar"));
                    v(0,btnMedallaBronceN);
                    v(0,btnMedallaBronce);
                    v(1,btnMedallaBronceC);
                    e(0,btnMedallaPlataN);
                    e(0,btnMedallaOroN);
                    
                    if(btnMedallaPlataC.isVisible()==true || btnMedallaOroC.isVisible()==true){
                        vn(1,btnMedallaPlataN);
                        vn(1,btnMedallaOroN);
                        v(0,btnMedallaPlataC);
                        v(0,btnMedallaOroC);
                    }
                }
                
                if(rs.getInt("lugar")==2){
                    spinnerLugar.getModel().setValue(rs.getInt("lugar"));
                    v(0,btnMedallaPlataN);
                    v(0,btnMedallaPlata);
                    v(1,btnMedallaPlataC);
                    e(0,btnMedallaBronceN);
                    e(0,btnMedallaOroN);
                    
                    if(btnMedallaBronceC.isVisible()==true || btnMedallaOroC.isVisible()==true){
                        vn(1,btnMedallaBronceN);
                        vn(1,btnMedallaOroN);
                        v(0,btnMedallaBronceC);
                        v(0,btnMedallaOroC);
                    }
                }
                
                if(rs.getInt("lugar")==1){
                    spinnerLugar.getModel().setValue(rs.getInt("lugar"));
                    v(0,btnMedallaOroN);
                    v(0,btnMedallaOro);
                    v(1,btnMedallaOroC);
                    e(0,btnMedallaPlataN);
                    e(0,btnMedallaBronceN);
                    
                    if(btnMedallaPlataC.isVisible()==true || btnMedallaBronceC.isVisible()==true){
                        vn(1,btnMedallaPlataN);
                        vn(1,btnMedallaBronceN);
                        v(0,btnMedallaPlataC);
                        v(0,btnMedallaBronceC);
                    }
                }
            }
        }catch(SQLException e){ JOptionPane.showInternalMessageDialog(pnlFondo, "Error: "+e.getMessage(),"Aviso",JOptionPane.WARNING_MESSAGE); }

        InhabilitarDatos();
        e(1,btnEditar);
        e(0,btnGuardar);
        v(0,btnGuardarCambios);
        
    }
    
    private void TVbtnGuardarActionPerformed() throws SQLException{

            try{
                InsertDatos();
                //timer.start();
            }catch(SQLException ex){ JOptionPane.showInternalMessageDialog(pnlFondo, "Error: "+ex.getMessage(),"Aviso",JOptionPane.ERROR_MESSAGE); }
    }
    
    private void InsertDatos() throws SQLException{
        
        if(!cbCategoria.getSelectedItem().equals("----------") && !txtNombreCompetencia.getText().equals("")){

            java.sql.Date fechaInicio;
            java.sql.Date fechaFinal;
            java.sql.Date fechaIda;
            java.sql.Date fechaRegreso;
            
            String fechaInicioS="";
            String fechaFinalS="";
            String fechaIdaS="";
            String fechaRegresoS="";
            
            if(dcFechaInicio.getDate()!=null){
                fechaInicio = new java.sql.Date(dcFechaInicio.getDate().getYear(), dcFechaInicio.getDate().getMonth(), dcFechaInicio.getDate().getDate());
                fechaInicioS = String.valueOf(fechaInicio);
            }else{
                fechaInicioS = "";
            }
            
            if(dcFechaFinal.getDate()!=null){
                fechaFinal = new java.sql.Date(dcFechaFinal.getDate().getYear(), dcFechaFinal.getDate().getMonth(), dcFechaFinal.getDate().getDate());
                fechaFinalS = String.valueOf(fechaFinal);
            }else{
                fechaFinalS = "";
            }
            
            if(dcFechaIda.getDate()!=null){
                fechaIda = new java.sql.Date(dcFechaIda.getDate().getYear(), dcFechaIda.getDate().getMonth(), dcFechaIda.getDate().getDate());
                fechaIdaS = String.valueOf(fechaIda);
            }else{
                fechaIdaS = "";
            }
            
            if(dcFechaRegreso.getDate()!=null){
                fechaRegreso = new java.sql.Date(dcFechaRegreso.getDate().getYear(), dcFechaRegreso.getDate().getMonth(), dcFechaRegreso.getDate().getDate());
                fechaRegresoS = String.valueOf(fechaRegreso);
            }else{
                fechaRegresoS = "";
            }
            
            PreparedStatement ps=connection.prepareStatement("INSERT INTO trayectodanza(cedula,lugar,nombrecompetencia,lugarcompetencia,arena,tipo,federacionencargada,fechainicio,fechafinal,fechaida,fecharegreso,categoria,edades)VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?)");
            ps.setInt(1,cedula);
            ps.setInt(2,lugar);
            ps.setString(3,txtNombreCompetencia.getText());
            ps.setString(4,txtLugarCompetencia.getText());
            ps.setString(5,txtArena.getText());
            ps.setString(6,cbTipoFederacion.getSelectedItem().toString().equals("----------")?"Sin identificar":cbTipoFederacion.getSelectedItem().toString());
            ps.setString(7,txtFederacion.getText().equals("")?"":txtFederacion.getText());
            ps.setString(8,fechaInicioS);
            ps.setString(9,fechaFinalS);
            ps.setString(10,fechaIdaS);
            ps.setString(11,fechaRegresoS);
            ps.setString(12,cbCategoria.getSelectedItem().toString().equals("----------")?"Sin identificar":cbCategoria.getSelectedItem().toString());
            ps.setString(13,cbEdades.getSelectedItem().toString().equals("----------")?"Sin identificar":cbEdades.getSelectedItem().toString());
            int res = ps.executeUpdate();

            if (res > 0) {
                timer.start();
                e(0,btnGuardar);
                LimpiarCajas();
                InhabilitarDatos();
 
                try{
                    InsertDatosEnTablaDanzinas();
                    InsertDatosEnTablaCompetencias(cedula);
                    
                }catch(SQLException ex){ JOptionPane.showMessageDialog(null,"Error: "+ex.getMessage()); }
                
                LimpiarCajas();
            }else{
                JOptionPane.showInternalMessageDialog(pnlFondo, "Error al registrar","Aviso",JOptionPane.WARNING_MESSAGE);
               
            }
        }else{
            JOptionPane.showInternalMessageDialog(pnlFondo, "Hay datos obligatorios sin rellenar","AVISO",JOptionPane.PLAIN_MESSAGE);
        }
        
    }
    
    private void InsertDatosEnTablaDanzinas() throws SQLException{
        
        modelo.setRowCount(0);
        
        try{
            connection = Conectar.getConnection();
            Statement st = connection.createStatement();
            ResultSet res = st.executeQuery("SELECT * FROM estadoinscripcioncategoria WHERE categoria = 'Danza'");
            
            while(res.next()){
                
                Statement st1 = connection.createStatement();
                ResultSet res1 = st1.executeQuery("SELECT * FROM datospersonales WHERE cedula = '"+res.getString("cedula")+"'");

                while(res1.next()){

                    datos[2] = res1.getString("cedula");
                    datos[0] = res1.getString("nombre");
                    datos[1] = res1.getString("apellido");

                    modelo.addRow(datos);
                }
                
            }

            tblDanzinas.setModel(modelo);
            
        }catch (SQLException ex){ JOptionPane.showInternalMessageDialog(pnlFondo, "Error: "+ex.getMessage(),"Aviso",JOptionPane.WARNING_MESSAGE); }
    }
    
    private void InsertDatosEnTablaCompetencias(int cedula) throws SQLException{
        
        modelo1.setRowCount(0);
        
        try{
            connection = Conectar.getConnection();
            Statement st = connection.createStatement();
            ResultSet res = st.executeQuery("SELECT * FROM trayectodanza WHERE cedula = '"+cedula+"'");
            
            while(res.next()){

                datos1[1] = res.getString("nombrecompetencia");
                datos1[2] = res.getString("categoria");
                datos1[3] = res.getString("lugar");
                datos1[0] = res.getString("id");

                modelo1.addRow(datos1);
                
                /*InhabilitarDatosPersonales();
                InhabilitarDatosInscripcion();*/
            }

            tblCompetencias.setModel(modelo1);
            
        }catch (SQLException ex){ JOptionPane.showInternalMessageDialog(pnlFondo, "Error: "+ex.getMessage(),"Aviso",JOptionPane.WARNING_MESSAGE); }
    }
    
    private void UpdateDatosInscripcion() throws SQLException{
        
            java.sql.Date fechaInicio;
            java.sql.Date fechaFinal;
            java.sql.Date fechaIda;
            java.sql.Date fechaRegreso;
            
            String fechaInicioS="";
            String fechaFinalS="";
            String fechaIdaS="";
            String fechaRegresoS="";
            
            if(dcFechaInicio.getDate()!=null){
                fechaInicio = new java.sql.Date(dcFechaInicio.getDate().getYear(), dcFechaInicio.getDate().getMonth(), dcFechaInicio.getDate().getDate());
                fechaInicioS = String.valueOf(fechaInicio);
            }else{
                fechaInicioS = "";
            }
            
            if(dcFechaFinal.getDate()!=null){
                fechaFinal = new java.sql.Date(dcFechaFinal.getDate().getYear(), dcFechaFinal.getDate().getMonth(), dcFechaFinal.getDate().getDate());
                fechaFinalS = String.valueOf(fechaFinal);
            }else{
                fechaFinalS = "";
            }
            
            if(dcFechaIda.getDate()!=null){
                fechaIda = new java.sql.Date(dcFechaIda.getDate().getYear(), dcFechaIda.getDate().getMonth(), dcFechaIda.getDate().getDate());
                fechaIdaS = String.valueOf(fechaIda);
            }else{
                fechaIdaS = "";
            }
            
            if(dcFechaRegreso.getDate()!=null){
                fechaRegreso = new java.sql.Date(dcFechaRegreso.getDate().getYear(), dcFechaRegreso.getDate().getMonth(), dcFechaRegreso.getDate().getDate());
                fechaRegresoS = String.valueOf(fechaRegreso);
            }else{
                fechaRegresoS = "";
            }

        PreparedStatement ps = connection.prepareStatement("UPDATE trayectodanza SET lugar=?,nombrecompetencia=?,lugarcompetencia=?,arena=?,tipo=?,federacionencargada=?,fechainicio=?,fechafinal=?,fechaida=?,fecharegreso=?,categoria=?,edades=? WHERE cedula='"+cedula+"' AND id='"+id+"'");
        ps.setInt(1,lugar);
        ps.setString(2,txtNombreCompetencia.getText());
        ps.setString(3,txtLugarCompetencia.getText());
        ps.setString(4,txtArena.getText());
        ps.setString(5,cbTipoFederacion.getSelectedItem().toString().equals("----------")?"Sin identificar":cbTipoFederacion.getSelectedItem().toString());
        ps.setString(6,txtFederacion.getText().equals("")?"":txtFederacion.getText());
        ps.setString(7,fechaInicioS);
        ps.setString(8,fechaFinalS);
        ps.setString(9,fechaIdaS);
        ps.setString(10,fechaRegresoS);
        ps.setString(11,cbCategoria.getSelectedItem().toString());
        ps.setString(12,cbEdades.getSelectedItem().toString());
        int res2 = ps.executeUpdate();

        if(res2>0){
            timer.start();
            InhabilitarDatos();
            v(0,btnGuardarCambios);
            v(1,btnGuardar);
            v(1,btnEditar);
            e(0,btnGuardar);
            e(0,btnEditar);
            LimpiarCajas();
            e(0,btnMedallaOroN);
            e(0,btnMedallaPlataN);
            e(0,btnMedallaBronceN);

            try{
                InsertDatosEnTablaDanzinas();
                InsertDatosEnTablaCompetencias(cedula);
                    
            }catch(SQLException ex){ JOptionPane.showMessageDialog(null,"Error: "+ex.getMessage()); }
                
            LimpiarCajas();
            
        }else{
            JOptionPane.showInternalMessageDialog(pnlFondo, "Error al modificar en la tabla Datos Inscripción","Aviso",JOptionPane.ERROR_MESSAGE);
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private elaprendiz.gui.label.LabelMetric APELLIDO;
    private elaprendiz.gui.label.LabelMetric APELLIDO1;
    private elaprendiz.gui.label.LabelMetric CEDULA;
    private elaprendiz.gui.label.LabelMetric EDAD;
    private elaprendiz.gui.label.LabelMetric FECHA;
    private elaprendiz.gui.label.LabelMetric FECHA1;
    private elaprendiz.gui.label.LabelMetric FECHA2;
    private elaprendiz.gui.label.LabelMetric FECHA3;
    private elaprendiz.gui.label.LabelMetric FECHA4;
    private elaprendiz.gui.label.LabelMetric FECHA5;
    private elaprendiz.gui.label.LabelMetric FOTO;
    private javax.swing.JLabel LUGAR;
    private elaprendiz.gui.label.LabelMetric NOMBRE;
    private elaprendiz.gui.label.LabelMetric NOMBRE1;
    private elaprendiz.gui.label.LabelMetric NOMBRE3;
    private elaprendiz.gui.label.LabelMetric NOMBRE4;
    private elaprendiz.gui.label.LabelMetric REPRESENTANTE;
    private elaprendiz.gui.label.LabelMetric REPRESENTANTE1;
    private elaprendiz.gui.label.LabelMetric REPRESENTANTE2;
    private elaprendiz.gui.label.LabelMetric SEXO;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar2;
    private elaprendiz.gui.button.ButtonTask btnFoto;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnGuardarCambios;
    private javax.swing.JButton btnMedallaBronce;
    private javax.swing.JButton btnMedallaBronceC;
    private javax.swing.JButton btnMedallaBronceN;
    private javax.swing.JButton btnMedallaOro;
    private javax.swing.JButton btnMedallaOroC;
    private javax.swing.JButton btnMedallaOroN;
    private javax.swing.JButton btnMedallaPlata;
    private javax.swing.JButton btnMedallaPlataC;
    private javax.swing.JButton btnMedallaPlataN;
    private elaprendiz.gui.comboBox.ComboBoxRectIcon cbBuscar;
    private elaprendiz.gui.comboBox.ComboBoxRectIcon cbBuscar1;
    private elaprendiz.gui.comboBox.ComboBoxRectIcon cbCategoria;
    private elaprendiz.gui.comboBox.ComboBoxRectIcon cbEdades;
    private elaprendiz.gui.comboBox.ComboBoxRectIcon cbTipoFederacion;
    private com.toedter.calendar.JDateChooser dcFechaFinal;
    private com.toedter.calendar.JDateChooser dcFechaIda;
    private com.toedter.calendar.JDateChooser dcFechaInicio;
    private com.toedter.calendar.JDateChooser dcFechaRegreso;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblPrimerLugar;
    private javax.swing.JLabel lblSegundoLugar;
    private javax.swing.JLabel lblTercerLugar;
    private javax.swing.JPanel pnlBuscadorCompetencia;
    private javax.swing.JPanel pnlBuscadorCompetidor;
    private elaprendiz.gui.panel.PanelImage pnlBuscar;
    private elaprendiz.gui.panel.PanelCurves pnlCurvas;
    private elaprendiz.gui.panel.PanelTranslucido pnlDatosPersonales;
    private elaprendiz.gui.panel.PanelTranslucido pnlDatosPersonales1;
    private elaprendiz.gui.panel.PanelTranslucido pnlDatosPersonales2;
    private elaprendiz.gui.panel.PanelImage pnlFondo;
    private elaprendiz.gui.panel.PanelTranslucido pnlFoto;
    private elaprendiz.gui.panel.PanelImage pnlImagenFoto;
    private javax.swing.JPanel pnlTablaCompetencia;
    private javax.swing.JPanel pnlTablaCompetidor;
    private elaprendiz.gui.progressBar.ProgressBarRound progressbarBarra;
    private javax.swing.JScrollPane scrollTabla;
    private javax.swing.JScrollPane scrollTabla2;
    private javax.swing.JSpinner spinnerLugar;
    private javax.swing.JTable tblCompetencias;
    private javax.swing.JTable tblDanzinas;
    private elaprendiz.gui.textField.TextFieldRectIcon txtApellido;
    private elaprendiz.gui.textField.TextFieldRectIcon txtArena;
    private elaprendiz.gui.textField.TextFieldRectIcon txtBuscar;
    private elaprendiz.gui.textField.TextFieldRectIcon txtBuscar1;
    private elaprendiz.gui.textField.TextFieldRectIcon txtCedula;
    private elaprendiz.gui.textField.TextFieldRectIcon txtEdad;
    private elaprendiz.gui.textField.TextFieldRectIcon txtFederacion;
    private elaprendiz.gui.textField.TextFieldRectIcon txtLugarCompetencia;
    private elaprendiz.gui.textField.TextFieldRectIcon txtNombre;
    private elaprendiz.gui.textField.TextFieldRectIcon txtNombreCompetencia;
    private elaprendiz.gui.textField.TextFieldRectIcon txtSexo;
    // End of variables declaration//GEN-END:variables
}
